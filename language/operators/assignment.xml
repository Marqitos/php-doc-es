<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 43d07782b514d0c7a8487f2c74063739f302df8d Maintainer: Marqitos Status: ready -->
<!-- Reviewed: no -->
<sect1 xml:id="language.operators.assignment">
 <title>Operadores de asignación</title>
 <titleabbrev>Asignación</titleabbrev>
 <simpara>
  El operador básico de asignación es "=". Se podría inclinar a pensar
  primero que es como un "igual a". No lo es. Realmente significa que el
  operando de la izquierda se establece con el valor de la expresión de la
  derecha (es decir, "se define como").
 </simpara>
 <para>
  El valor de una expresión de asignación es el valor asignado. Es
  decir, el valor de "<literal>$a = 3</literal>" es de 3. Esto permite hacer algunas cosas
  complicadas:
  <informalexample>
   <programlisting role="php">
<![CDATA[
<?php

$a = ($b = 4) + 5; // Ahora $a es igual a 9 y $b se ha establecido en 4.

?>
]]>
   </programlisting>
  </informalexample>
 </para>
 <para>
  Además del operador básico de asignación, existen «operadores
  combinados» para todos los de <link linkend="language.operators">aritmética
  binaria</link>, unión de arrays y operadores de strings que permiten usar un valor en una
  expresión y entonces establecer su valor como el resultado de esa expresión. Por
  ejemplo:
  <informalexample>
   <programlisting role="php">
<![CDATA[
<?php

$a = 3;
$a += 5; // Establece $a en 8, como si se hubiera dicho: $a = $a + 5;
$b = "Hola ";
$b .= "ahí!"; // establece $b en "Hola ahí!", al igual que $b = $b . "ahí!";

?>
]]>
   </programlisting>
  </informalexample>
 </para>
 <para>
  Observe que la asignación copia la variable original en la nueva
  (asignación por valor), por lo que los cambios en una no afectarán a la
  otra. Esto también puede tener relevancia si se necesita copiar algo
  como un gran array dentro de un bucle estrecho.
 </para>
 <para>
  Una excepción al comportamiento usual de la asignación por valor en PHP ocurre
  con <type>object</type>s los cuales son asignados por referencia.
  Los objetos pueden ser explícitamente copiados por medio de la palabra clave
  <link linkend="language.oop5.cloning">clone</link>.
 </para>

 <sect2 xml:id="language.operators.assignment.reference">
  <title>Asignación por referencia</title>
  <para>
   La asignación por referencia también está soportada, utilizando la
   sintaxis "<computeroutput>$var = &amp;$othervar;</computeroutput>".
   Asignación por referencia significa que ambas variables terminan apuntando a los
   mismos datos y nada es copiado en ninguna parte.
  </para>
  <para>
   <example>
    <title>Asignación por referencia</title>
    <programlisting role="php">
<![CDATA[
<?php
$a = 3;
$b = &$a; // $b es una referencia para $a

print "$a\n"; // Imprime 3
print "$b\n"; // Imprime 3

$a = 4; // cambia $a

print "$a\n"; // Imprime 4
print "$b\n"; // Imprime 4 también, dado que $b es una referencia para $a, la cual ha
              // sido cambiada
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   El operador <link linkend="language.oop5.basic.new">new</link>
   devuelve una referencia automáticamente, así que asignar el resultado de
   <link linkend="language.oop5.basic.new">new</link> por referencia es un error.
  </para>
  <para>
   <informalexample>
    <programlisting role="php">
<![CDATA[
<?php
class C {}

$o = &new C;
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Parse error: syntax error, unexpected 'new' (T_NEW) in …
]]>
    </screen>
   </informalexample>
  </para>
  <para>
   Más información sobre referencias y sus usos potenciales se puede encontrar en
   la sección del manual
   <link linkend="language.references">Referencias Explicadas</link>.
  </para>
 </sect2>

 <sect2 xml:id="language.operators.assignment.arithmetic">
  <title>Operadores de Asignación Aritmética</title>
  <informaltable>
   <tgroup cols="3">
    <thead>
     <row>
      <entry>Ejemplo</entry>
      <entry>Equivalencia</entry>
      <entry>Operación</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>$a += $b</entry>
      <entry>$a = $a + $b</entry>
      <entry>Adición</entry>
     </row>
     <row>
      <entry>$a -= $b</entry>
      <entry>$a = $a - $b</entry>
      <entry>Sustracción</entry>
     </row>
     <row>
      <entry>$a *= $b</entry>
      <entry>$a = $a * $b</entry>
      <entry>Multiplicación</entry>
     </row>
     <row>
      <entry>$a /= $b</entry>
      <entry>$a = $a / $b</entry>
      <entry>División</entry>
     </row>
     <row>
      <entry>$a %= $b</entry>
      <entry>$a = $a % $b</entry>
      <entry>Módulo</entry>
     </row>
     <row>
      <entry>$a **= $b</entry>
      <entry>$a = $a ** $b</entry>
      <entry>Exponenciación</entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </sect2>

 <sect2 xml:id="language.operators.assignment.bitwise">
  <title>Operadores de Asignación bit a bit</title>
  <informaltable>
   <tgroup cols="3">
    <thead>
     <row>
      <entry>Ejemplo</entry>
      <entry>Equivalencia</entry>
      <entry>Operación</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>$a &amp;= $b</entry>
      <entry>$a = $a &amp; $b</entry>
      <entry>And bit a bit</entry>
     </row>
     <row>
      <entry>$a |= $b</entry>
      <entry>$a = $a | $b</entry>
      <entry>Or bit a bit</entry>
     </row>
     <row>
      <entry>$a ^= $b</entry>
      <entry>$a = $a ^ $b</entry>
      <entry>Xor bit a bit</entry>
     </row>
     <row>
      <entry>$a &lt;&lt;= $b</entry>
      <entry>$a = $a &lt;&lt; $b</entry>
      <entry>Desplazamiento a la izquierda</entry>
     </row>
     <row>
      <entry>$a &gt;&gt;= $b</entry>
      <entry>$a = $a &gt;&gt; $b</entry>
      <entry>Desplazamiento a la derecha</entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </sect2>

 <sect2 xml:id="language.operators.assignment.other">
  <title>Otros Operadores de Asignación</title>
  <informaltable>
   <tgroup cols="3">
    <thead>
     <row>
      <entry>Ejemplo</entry>
      <entry>Equivalencia</entry>
      <entry>Operación</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>$a .= $b</entry>
      <entry>$a = $a . $b</entry>
      <entry>Concatenación de Strings</entry>
     </row>
     <row>
      <entry>$a ??= $b</entry>
      <entry>$a = $a ?? $b</entry>
      <entry>Coalescencia de nulos</entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </sect2>

 <sect2 role="seealso" xml:id="language.operators.assignment.see-also">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><link linkend="language.operators.arithmetic">Operadores aritméticos</link></member>
    <member><link linkend="language.operators.bitwise">Operadores bit a bit</link></member>
    <member><link linkend="language.operators.comparison.coalesce">Operador de Coalescencia de Nulos</link></member>
   </simplelist>
  </para>
 </sect2>
</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
