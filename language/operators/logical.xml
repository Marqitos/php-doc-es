<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 43d07782b514d0c7a8487f2c74063739f302df8d Maintainer: Marqitos Status: ready -->
<!-- Reviewed: no -->
<sect1 xml:id="language.operators.logical">
 <title>Operadores lógicos</title>
 <titleabbrev>Lógicos</titleabbrev>

 <table>
  <title>Operadores lógicos</title>
  <tgroup cols="3">
   <thead>
    <row>
     <entry>Ejemplo</entry>
     <entry>Nombre</entry>
     <entry>Resultado</entry>
    </row>
   </thead>
   <tbody>
    <row>
     <entry>$a and $b</entry>
     <entry>And (y)</entry>
     <entry>&true; si tanto <varname>$a</varname> como <varname>$b</varname> son &true;.</entry>
    </row>
    <row>
     <entry>$a or $b</entry>
     <entry>Or (o inclusivo)</entry>
     <entry>&true; si cualquiera de <varname>$a</varname> o <varname>$b</varname> es &true;.</entry>
    </row>
    <row>
     <entry>$a xor $b</entry>
     <entry>Xor (o exclusivo)</entry>
     <entry>&true; si <varname>$a</varname> o <varname>$b</varname> es &true;, pero no ambos.</entry>
    </row>
    <row>
     <entry>! $a</entry>
     <entry>Not (no)</entry>
     <entry>&true; si <varname>$a</varname> no es &true;.</entry>
    </row>
    <row>
     <entry>$a &amp;&amp; $b</entry>
     <entry>And (y)</entry>
     <entry>&true; si tanto <varname>$a</varname> como <varname>$b</varname> son &true;.</entry>
    </row>
    <row>
     <entry>$a || $b</entry>
     <entry>Or (o inclusivo)</entry>
     <entry>&true; si cualquiera de <varname>$a</varname> o <varname>$b</varname> es &true;.</entry>
    </row>
   </tbody>
  </tgroup>
 </table>
 <simpara>
  La razón para tener las dos variaciones diferentes de los operadores
  "and" y "or" es que ellos operan con precedencias diferentes. (Ver
  <link linkend="language.operators.precedence">Precedencia
   de operadores</link>.)
 </simpara>
 <example>
  <title>Los operadores lógicos ilustrados</title>
  <programlisting role="php">
<![CDATA[
<?php

// --------------------
// foo() nunca será llamado ya que los operadores están en cortocircuito

$a = (false && foo());
$b = (true  || foo());
$c = (false and foo());
$d = (true  or  foo());

// --------------------
// "||" tiene una precedencia mayor que "or"

// El resultado de la expresión (false || true) es asignado a $e
// Actúa como: ($e = (false || true))
$e = false || true;

// La constante false es asignada a $f antes de que suceda la operación "or"
// Actúa como: (($f = false) or true)
$f = false or true;

var_dump($e, $f);

// --------------------
// "&&" tiene una precedencia mayor que "and"

// El resultado de la expresión (true && false) es asignado a $g
// Actúa como: ($g = (true && false))
$g = true && false;

// La constante true es asignada a $h antes de que suceda la operación "and"
// Actúa como: (($h = true) and false)
$h = true and false;

var_dump($g, $h);
?>
]]>
  </programlisting>
  &example.outputs.similar;
  <screen>
<![CDATA[
bool(true)
bool(false)
bool(false)
bool(true)
]]>
  </screen>
 </example>
</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
