<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 4f5e2b22575131fa5e9c3004b1c874e1acb06573 Maintainer: seros Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="domnode.replacechild" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>DOMNode::replaceChild</refname>
  <refpurpose>
   Reemplaza un hijo
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="DOMNode">
   <modifier>public</modifier> <type class="union"><type>DOMNode</type><type>false</type></type><methodname>DOMNode::replaceChild</methodname>
   <methodparam><type>DOMNode</type><parameter>node</parameter></methodparam>
   <methodparam><type>DOMNode</type><parameter>child</parameter></methodparam>
  </methodsynopsis>
  <para>
   Esta función reemplaza el hijo <parameter>child</parameter>
   con es nuevo nodo <parameter>node</parameter> proporcionado. Si el nuevo nodo ya es un hijo
   no será añadido una segunda vez. Si el reemplazo tiene éxito
   se devuelve el nodo antiguo.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>node</parameter></term>
     <listitem>
      <para>
       El nuevo nodo. Debe ser un miembro del documento objetivo, es decir,
       creado con uno de los métodos DOMDocument-&gt;createXXX() o importado al
       the document by <xref linkend="domdocument.importnode"/>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>child</parameter></term>
     <listitem>
      <para>
       El nodo antiguo.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   El nodo antiguo o &false; si ocurrió un error.
  </para>
 </refsect1>
 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   <variablelist>
    <varlistentry>
     <term><constant>DOM_NO_MODIFICATION_ALLOWED_ERR</constant></term>
     <listitem>
      <para>
       Lanazado si este nodo es de sólo lectura o si el padre anterior del nodo
       al que va a ser insertado es de sólo lectura.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><constant>DOM_HIERARCHY_REQUEST_ERR</constant></term>
     <listitem>
      <para>
       Lanzado si el nodo es de un tipo que no permite hijos del tipo
       del nodo <parameter>node</parameter>, o si el nodo a
       colocar es uno de los progenitores de este nodo o es este nodo en sí.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><constant>DOM_WRONG_DOCUMENT_ERR</constant></term>
     <listitem>
      <para>
       Lanzado si <parameter>node</parameter> fue creado desde un documento
       diferente que el que creó este nodo.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><constant>DOM_NOT_FOUND</constant></term>
     <listitem>
      <para>
       Lanzado si <parameter>child</parameter> no es un hijo de este nodo.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>DOMChildNode::replaceWith</methodname></member>
    <member><methodname>DOMNode::appendChild</methodname></member>
    <member><methodname>DOMNode::removeChild</methodname></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
