<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 3295741565f760edd22e305bd10e37f243e9e194 Maintainer: Marqitos Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.bcpow" xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude">
 <refnamediv>
  <refname>bcpow</refname>
  <refpurpose>Elevar un número de precisión arbitraria a otro</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>bcpow</methodname>
   <methodparam><type>string</type><parameter>num</parameter></methodparam>
   <methodparam><type>string</type><parameter>exponent</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>int</type><type>null</type></type><parameter>scale</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Eleva <parameter>num</parameter> a la potencia
   <parameter>exponent</parameter>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>num</parameter></term>
     <listitem>
      <para>
       La base, como un string.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>exponent</parameter></term>
     <listitem>
      <para>
       El exponente, como un string. Debe ser un valor sin parte fraccionaria.
       El rango válido del exponente es específico de la plataforma, pero es al menos de
       <literal>-2147483648</literal> a <literal>2147483647</literal>.
      </para>
     </listitem>
    </varlistentry>
    <xi:include xpointer="function.bcadd..parameters.scale" />
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve el resultado como un string.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Esta función lanza una <exceptionname>ValueError</exceptionname> en los siguientes casos:
   <simplelist>
    <member><parameter>num</parameter> o <parameter>exponent</parameter> no es un string numérico con formato válido de BCMath</member>
    <member><parameter>exponent</parameter> tiene una parte fraccionaria</member>
    <member><parameter>exponent</parameter> o <parameter>scale</parameter> están fuera del rango válido</member>
   </simplelist>
  </para>
  <simpara>
   Esta función lanza una <exceptionname>DivisionByZeroError</exceptionname> si <parameter>num</parameter>
   es <literal>0</literal> y <parameter>exponent</parameter> es un valor negativo.
  </simpara>
 </refsect1>

 <refsect1 role="changelog"><!-- {{{ -->
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.4.0</entry>
      <entry>
       Las potencias negativas de <literal>0</literal> anteriormente devolvían <literal>0</literal>, pero ahora lanzan una
       excepción <exceptionname>DivisionByZeroError</exceptionname>.
      </entry>
     </row>
     <row>
      <entry>8.0.0</entry>
      <entry>
       Cuando <parameter>exponent</parameter> tiene una parte fraccionaria, ahora lanza un <exceptionname>ValueError</exceptionname>
       en lugar de truncar.
      </entry>
     </row>
     <row>
      <entry>7.3.0</entry>
      <entry>
       <function>bcpow</function> ahora devuelve números con la escala solicitada.
       Anteriormente, los números devueltos podían omitir los ceros decimales finales.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1><!-- }}} -->

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Ejemplo de <function>bcpow</function></title>
   <programlisting role="php">
<![CDATA[
<?php

echo bcpow('4.2', '3', 2); // 74.08

?>
]]>
   </programlisting>
  </example>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Antes de PHP 7.3.0, <function>bcpow</function> podría devolver un resultado con menos dígitos después del punto
    decimal que los indicados en el parámetro <parameter>scale</parameter>.
    Esto sucede únicamente cuando el resultado no necesita toda la precisión
    disponible por <parameter>scale</parameter>. Por ejemplo:
    <example>
     <title>Ejemplo de escalado de <function>bcpow</function></title>
     <programlisting role="php">
<![CDATA[
<?php
echo bcpow('5', '2', 2);     // Imprime "25", no "25.00"
?>
]]>
     </programlisting>
    </example>
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>bcpowmod</function></member>
    <member><function>bcsqrt</function></member>
    <member><methodname>BcMath\Number::pow</methodname></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
