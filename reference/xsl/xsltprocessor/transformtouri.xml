<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 5d95b4bb24353111b02874a24af2dc39e3c8a9de Maintainer: jpberdejo Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="xsltprocessor.transformtouri" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>XSLTProcessor::transformToUri</refname>
  <refpurpose>Transformar a URI</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="XSLTProcessor">
   <modifier>public</modifier> <type>int</type><methodname>XSLTProcessor::transformToUri</methodname>
   <methodparam><type>object</type><parameter>document</parameter></methodparam>
   <methodparam><type>string</type><parameter>uri</parameter></methodparam>
  </methodsynopsis>
  <para>
   Transforma el nodo origen a una URI aplicando la hoja de estilos dada por
   el metodo <function>XSLTProcessor::importStylesheet</function>.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>document</parameter></term>
     <listitem>
      <para>
       El documento a transformar.
       El objeto <classname>DOMDocument</classname> or <classname>SimpleXMLElement</classname> para
       ser transformado.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>uri</parameter></term>
     <listitem>
      <para>
       Devuelve la ubicación URI para la transformación.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retorna el número de bytes escritos o &false; en caso de error.
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Transformando a un fichero HTML</title>
    <programlisting role="php">
<![CDATA[
<?php

// Carga el fichero XML origen
$xml = new DOMDocument;
$xml->load('collection.xml');

$xsl = new DOMDocument;
$xsl->load('collection.xsl');

// Configura el procesador
$proc = new XSLTProcessor;
$proc->importStyleSheet($xsl); // adjunta las reglas xsl

$proc->transformToURI($xml, 'file:///tmp/out.html');

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>XSLTProcessor::transformToDoc</function></member>
    <member><function>XSLTProcessor::transformToXml</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
