<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 53b6f116ed5f8649ca540c38dfe0ce30619d0dd9 Maintainer: aeoris Status: ready -->
<!-- Reviewed: no -->
<!-- splitted from ./en/functions/dir.xml, last change in rev 1.2 -->
<refentry xml:id="function.dir" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>dir</refname>
  <refpurpose>Devuelve una instancia de la clase Directory</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>Directory</type><type>false</type></type><methodname>dir</methodname>
   <methodparam><type>string</type><parameter>directory</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>resource</type><type>null</type></type><parameter>context</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>

  <para>
   Una forma pseudo orientada a objetos de leer un directorio. El
   directorio proporcionado en <parameter>directory</parameter> es abierto.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>directory</parameter></term>
    <listitem>
     <para>
      Directorio a abrir
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>context</parameter></term>
    <listitem>
      &note.context-support;
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve una instancia de la clase <classname>Directory</classname>, o &false; en caso de error.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.0.0</entry>
      <entry>
       <parameter>context</parameter> ahora es nullable.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo de <function>dir</function></title>
    <para>
     Tenga en cuenta la forma en que se comprueba el valor de retorno de <function>Directory::read</function>
     en el siguiente ejemplo. Es necesario verificar explicitamente
     si el valor de retorno es identico (tanto en valor como en
     tipo - ver <link linkend="language.operators.comparison">
     Operadores de comparación</link> para más información) a &false;, ya que
     de lo contrario, cualquier directorio cuyo nombre evaluase a &false;
     finalizaría el bucle.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
$d = dir("/etc/php5");
echo "Handle: " . $d->handle . "\n";
echo "Path: " . $d->path . "\n";
while (false !== ($entry = $d->read())) {
   echo $entry."\n";
}
$d->close();
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
Handle: Resource id #2
Path: /etc/php5
.
..
apache
cgi
cli
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    El orden en el que los archivos de un directorio son devueltos por el método de lectura
    depende del sistema.
   </para>
  </note>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
